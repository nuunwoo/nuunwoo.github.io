name: Deploy Vite site to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install deps
        run: yarn install
        # lockfile 엄격 모드 쓰려면:
        # run: yarn install --frozen-lockfile

      # ✅ 배포용 env 파일 생성 (빌드 '직전'에 실행)
      - name: Create .env.production
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env.production
          echo "VITE_GA_ID=${{ secrets.VITE_GA_ID }}" >> .env.production
          echo "VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN }}" >> .env.production

      # (선택) 파일 존재만 검사 — 값은 노출 금지
      - name: Show env files
        run: ls -la . | grep env || true

      - name: Build
        run: yarn build --mode production
        # production 모드: .env, .env.production, (있다면) .env.local 순으로 머지
        # CI에는 .env.local이 없으므로 방금 만든 .env.production이 적용됨

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
